题目：
  给定链表的头结点head，实现删除链表的中间节点的函数。
  
  例如：
    不删除任何节点；
    1->2, 删除节点1
    1->2->3，删除节点2
    1->2->3->4，删除节点2
    1->2->3->4->5，删除节点3
    
思路：
  1. 如果链表为空或者长度为1，不需要调整，直接返回；
  2. 如果链表长度为2，删除头结点
  3. 从链表长度为3开始，每增加两个节点，删除节点往后移一个节点。
  删除节点时，需要找到删除节点的前一个节点
  
  如此，可以使用两个节点指针来进行，在链表长度大于3以上时，pre（前节点）指向head，cur（当前有的节点）指向head.next.next，只要cur之后的两个节点不为空，
  那么pre向后移动一个节点，cur向后移动两个节点，知道不满足时，就找到了当前删除节点的前节点pre，将pre.next指向pre.next.next即可。
  
// code java

// 链表节点类
public class Node{
  public int value;
  public Node next;
  
  public Node(int data){
    this.value = data;
  }
}

public Node removeMidNode(Node head){
  //  如果链表为空或者长度为1，不需要调整，直接返回
  if(head == null || head.next == null){
    return head;
  }
  // 如果链表长度为2，删除头结点
  if(head.next.next == null){
    return head.next;
  }
  
  // 从链表长度为3开始，每增加两个节点，删除节点往后移一个节点
  Node pre = head;
  Node cur = head.next.next;
  while(cur.next != null && cur.next.next != null){
    pre = pre.next;
    cur = cur.next.next;
  }
  pre.next = pre.next.next;
  return head;
}
    
进阶题目：
    给定链表的头结点head、整数a和b，实现删除位于a/b处节点的函数。
    
    例如：
      链表： 1->2->3->4->5， 假设a/b的值为r。
      如果 r=0，不删除任何节点
      如果 r在区间(0， 1/5]上，删除节点1；
      ...
      如果 r在区间(4/5，1]上，删除节点5；
      如果 r>1, 不删除任何节点
      
  思路：
    这时就只要根据链表长度n，以及a和b，找到哪个节点需要删除即可
    r = (int) Math.ceil((double)(a*n) / (double)(b));  ceil取不小于a的最小值, 例如a=1.3 则 ceil(a) = 2
    
    public Node removeByRatio(Node head, int a, int b){
      if(a < 1 || a > b){
        return head;
      }
      
      int n = 0;
      Node cur = head;
      while(cur.next!=null){
        n++;
        cur = cur.next;
      }
      
      n = (int) Math.ceil((double)(a*n)/(double)b);
      
      if(n==1){
        head = head.next;
      }
      
      if(n > 1){
        cur = head;
        while(--n != 1){
          cur = cur.next;
        }
        cur.next = cur.next.next;
      }
      return head;
    }
